set -g  prefix M-t
set -g  history-limit 50000
set -g  mouse on
set -gs escape-time 1
set -g  base-index 1
set -g  pane-base-index 1
set -g  wrap-search off

set -g bell-action none
set -g pane-active-border-style fg=magenta
set -g status-style bg=magenta,fg=black
# set-window-option -g mode-style fg=black,bg=yellow
set-window-option -g mode-keys vi

unbind -a

# for nested tmux on a remote server
bind -n M-T send-prefix

# Navigation
bind r select-pane -U
bind h select-pane -D
bind s select-pane -L
bind t select-pane -R
bind M-t select-pane -t :.+

# Pane management
bind    - split-window -v
bind    | split-window -h
bind    = select-layout even-horizontal
bind    + select-layout tiled
bind    z resize-pane -Z
bind -r R resize-pane -U
bind -r H resize-pane -D
bind -r S resize-pane -L
bind -r T resize-pane -R

# Windows
bind c     new-window -a -t '{end}'
bind Tab   select-window -t +
bind Btab  select-window -t -
bind M-Tab choose-session
bind C     kill-window
bind 1     select-window -t 1
bind 2     select-window -t 2
bind 3     select-window -t 3
bind 4     select-window -t 4
bind 5     select-window -t 5
bind 6     select-window -t 6
bind 7     select-window -t 7
bind 8     select-window -t 8
bind 9     select-window -t 9

# Meta commands
bind M-r source-file ~/.tmux.conf
bind M-q detach
bind   ? list-keys
bind C-z suspend-client
# bind   r respawn-pane -k
bind Enter command-prompt
bind Space copy-mode
bind Up copy-mode \; send -X scroll-up
bind S-Up copy-mode \; send -X halfpage-up

bind -n M-Up {
  copy-mode

  send-keys -X start-of-line
  # I use a non-breaking space because tmux trims trailing whitespace off of
  # scrollback lines. That means if you hit enter without typing anything,
  # you will have a line like "~/src ➜" in your scrollback buffer instead of
  # "~/src ➜ ". But the nbsp does not get chopped like this.
  send-keys -X search-backward-text "\u00A0"

  # if we are on the very first prompt line, the search-backward-text will do
  # nothing, and we'll be stuck at the start-of-line. So we want to reposition
  # the cursor after the prompt unconditionally:
  send-keys -X start-of-line
  send-keys -X search-forward-text "\u00A0"

  # now we clear the search text
  send-keys -X stop-selection

  # and then reposition the cursor to match the beginning of the text
  send-keys -X cursor-right
}

bind -n M-Down {
  copy-mode
  send-keys -X search-forward-text "\u00A0"
  send-keys -X stop-selection
  send-keys -X cursor-right
}

bind -n S-M-Up {
  copy-mode
  send-keys -X clear-selection

  # if you're "changing direction" after a series of S-M-Down commands,
  # it would be nice to stay in the same "block" of output. but tmux doesn't
  # have a way to do that, that i can figure out.

  send-keys -X cursor-up
  send-keys -X start-of-line

  if -F "#{m:*\u00A0*,#{copy_cursor_line}}" {
    # if you are on a prompt line, select the text after the prompt
    send-keys -X search-forward-text "\u00A0"
    send-keys -X stop-selection
    send-keys -X cursor-right
    send-keys -X begin-selection
    send-keys -X end-of-line
  } {
    # if you are not on a prompt line, select the last output
    send-keys -X select-line
    send-keys -X search-backward-text "\u00A0"
    send-keys -X cursor-down
    send-keys -X start-of-line
    send-keys -X stop-selection
  }
}

bind -n S-M-Down {
  copy-mode
  send-keys -X clear-selection

  send-keys -X cursor-down
  send-keys -X start-of-line

  if -F "#{m:*\u00A0*,#{copy_cursor_line}}" {
    # if you are on a prompt line, select the text after the prompt
    send-keys -X search-forward-text "\u00A0"
    send-keys -X stop-selection
    send-keys -X cursor-right
    send-keys -X begin-selection
    send-keys -X end-of-line
  } {
    # if you are not on a prompt line, select the next output
    send-keys -X select-line
    send-keys -X search-forward-text "\u00A0"
    send-keys -X cursor-up
    send-keys -X start-of-line
    send-keys -X stop-selection
  }
}

unbind -a -T copy-mode-vi

bind -T copy-mode-vi y send -X copy-selection-no-clear
bind -T copy-mode-vi r send -X cursor-up
bind -T copy-mode-vi R send -X top-line
bind -T copy-mode-vi h send -X cursor-down
bind -T copy-mode-vi H send -X bottom-line
bind -T copy-mode-vi s send -X cursor-left
bind -T copy-mode-vi S send -X previous-word
bind -T copy-mode-vi t send -X cursor-right
bind -T copy-mode-vi T send -X next-word-end
bind -T copy-mode-vi w command-prompt -1 -p "(jump forward)"     "send -X jump-forward     \"%%%\""
bind -T copy-mode-vi W command-prompt -1 -p "(jump to forward)"  "send -X jump-to-forward  \"%%%\""
bind -T copy-mode-vi d command-prompt -1 -p "(jump backward)"    "send -X jump-backward    \"%%%\""
bind -T copy-mode-vi D command-prompt -1 -p "(jump to backward)" "send -X jump-to-backward \"%%%\""
bind -T copy-mode-vi Down send -X scroll-down
bind -T copy-mode-vi S-Down send -X halfpage-down
bind -T copy-mode-vi Up send -X scroll-up
bind -T copy-mode-vi S-Up send -X halfpage-up
bind -T copy-mode-vi g send -X end-of-line
bind -T copy-mode-vi G send -X history-bottom
bind -T copy-mode-vi a send -X start-of-line
bind -T copy-mode-vi A send -X history-top
bind -T copy-mode-vi v send -X rectangle-toggle
bind -T copy-mode-vi V send -X select-line
bind -T copy-mode-vi n send -X search-again
bind -T copy-mode-vi N send -X search-reverse
bind -T copy-mode-vi o send -X other-end
bind -T copy-mode-vi C-c send -X cancel
bind -T copy-mode-vi Enter  send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape if -F "#{selection_present}" "send -X clear-selection" "send -X cancel"
bind -T copy-mode-vi Space  if -F "#{selection_present}" "send -X clear-selection" "send -X begin-selection"
bind -T copy-mode-vi / command-prompt -p "(search down)" "send -X search-forward  \"%%%\""
bind -T copy-mode-vi ? command-prompt -p "(search up)"   "send -X search-backward \"%%%\""

# Restore unbound mouse commands
bind -T root MouseDown1Pane select-pane -t = \; send -M
bind -n MouseDown1Status select-window -t =
bind -n MouseDown3Pane   if -F -t = "#{mouse_any_flag}" "select-pane -t=; send -M" "select-pane -mt="
bind -n MouseDrag1Pane   if -F -t = "#{mouse_any_flag}" 'if -Ft= "#{pane_in_mode}" "copy-mode -M" "send -M"' "copy-mode -M"
bind -n MouseDrag1Border resize-pane -M
bind -n WheelUpPane      if -F -t = "#{mouse_any_flag}" "send -M" 'if -Ft= "#{pane_in_mode}" "send -M" "copy-mode -et="'
bind -n WheelUpStatus    previous-window
bind -n WheelDownStatus  next-window

# Restores unbound copy-mode mouse commands
bind -T copy-mode-vi MouseDown1Pane    select-pane
bind -T copy-mode-vi MouseDrag1Pane    select-pane \; send-keys -X begin-selection
# bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-no-clear
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 5 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 5 scroll-down
bind -T copy-mode-vi DoubleClick1Pane  select-pane \; send-keys -X select-word
bind -T copy-mode-vi TripleClick1Pane  select-pane \; send-keys -X select-line
